mod icache;
mod dcache;
mod pipe;
mod instructions;
mod regfile;

use lib::icache::instruction_cache;
use lib::pipe::r4200_pipeline;
use lib::pipe::PipelineResult;
use lib::pipe::ExternalRequest;

use std::ports::new_mut_wire;

struct Result {
    pc: uint<64>,
    status: PipelineResult,
    external: ExternalRequest
}

entity cpu(
    phase2: clock,
    phase1: clock,
    rst: bool,
    icache_write: Option<(uint<11>, uint<20>, uint<64>)>,
    dcache_write: Option<(uint<9>, uint<20>, uint<128>)>
) -> Result
{
    let icache = inst(1) instruction_cache(phase1, icache_write);
    let dcache = inst(1) dcache::dcache(phase2, dcache_write);
    let (pc, status, external) = inst(5) r4200_pipeline(phase2, phase1, rst, icache, dcache);

    Result$(pc, status, external)
}
